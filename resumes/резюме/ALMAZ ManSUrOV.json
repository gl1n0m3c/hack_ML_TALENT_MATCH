{"resume": {"first_name": "ALMAZ", "last_name": "ManSUrOV", "middle_name": null, "birth_date": null, "birth_date_year_only": false, "country": "Russian Federation", "city": "Saint Petersburg", "about": null, "key_skills": "Java, C, C++, C#, JavaScript, HTML/CSS", "salary_expectations_amount": null, "salary_expectations_currency": null, "gender": 1, "photo_path": null, "resume_name": null, "source_link": "mrbaaauzmansurov", "resume_id": "17735", "contactItems": [{"value": "mr.behraaaansurov@gmail.com", "comment": "\u0418\u0437\u0432\u043b\u0435\u043a\u0438\u0442\u0435 \u0442\u0435\u043a\u0441\u0442 \u043a\u043e\u043d\u0442\u0430\u043a\u0442\u0430 \u043a\u0430\u043d\u0434\u0438\u0434\u0430\u0442\u0430(\u0442\u043e\u043b\u044c\u043a\u043e \u0435\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435). \u0415\u0441\u043b\u0438 \u0442\u0430\u043a\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043d\u0435\u0442 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 None", "contact_type": 2, "resume_contact_item_id": "41736"}, {"value": "mrbaaauzmansurov", "comment": "\u0418\u0437\u0432\u043b\u0435\u043a\u0438\u0442\u0435 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u043a \u043a\u043e\u043d\u0442\u0430\u043a\u0442\u0443 \u043a\u0430\u043d\u0434\u0438\u0434\u0430\u0442\u0430. \u0415\u0441\u043b\u0438 \u0442\u0430\u043a\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043d\u0435\u0442 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 None", "contact_type": 5, "resume_contact_item_id": "94073"}], "educationItems": [{"year": "2018 - 2022", "organization": "ITMO University", "faculty": "Software Engineering", "specialty": "Bachelor of Software Engineering", "result": "GPA - 4.2/5.0", "education_type": 4, "education_level": 5, "resume_education_item_id": "94685"}], "experienceItems": [{"starts": "Jun 2021", "ends": "Oct 2021", "employer": "Nethermind", "city": "Remote", "url": "None", "position": "Software engineer intern", "description": "Contributed to the implementation of the eth call module to send a transaction immediately, without creating a transaction in the blockchain. The module can be used to query the state of an internal contract, to execute validations coded into a contract, or even to test what the effect of a transaction will be without running it in real-time. The calculation of transaction costs implemented in the eth call module helps to calculate exactly how many resources are needed to complete the transaction. Implemented automatic detection of the transaction type in the eth call namespace, which simplifies the process of sending a transaction.", "resume_experience_item_id": "41319", "order": 0}], "languageItems": [{"language": "English", "language_level": 6, "resume_language_item_id": "72490"}, {"language": "Russian", "language_level": 7, "resume_language_item_id": "90349"}]}}